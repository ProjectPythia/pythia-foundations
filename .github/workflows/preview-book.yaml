name: preview-book
on:
  workflow_run:
    workflows:
      - deploy-book
    types:
      - completed
jobs:
  deploy:
    if: github.repository == 'ProjectPythia/pythia-foundations'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifact Book
        uses: dawidd6/action-download-artifact@v2.14.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: deploy.yaml
          run_id: ${{ github.event.workflow_run.id }}
          name: book-zip
      - name: Unzip book
        run: |
          rm -rf ./_build/html
          unzip book.zip
          rm -f book.zip
      - name: Deploy to Netlify
        id: netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: ./_build/html
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5

      - name: Set message value
        run: |
          echo "comment_message=This pull request is being automatically built with GitHub Action + Netlify. To see the status of your deployment, click below." >> $GITHUB_ENV

      - name: Find Pull Request
        uses: juliangruber/find-pull-request-action@v1
        id: find-pull-request
        with:
          branch: ${{ github.event.workflow_run.head_branch }}

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        if: steps.find-pull-request.outputs.number  != ''
        id: fc
        with:
          issue-number: '${{ steps.find-pull-request.outputs.number }}'
          comment-author: 'github-actions[bot]'
          body-includes: '${{ env.comment_message }}'

      - name: Update Jupyter Book Preview comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ${{ env.comment_message }}

            ðŸ“š Git commit SHA:  ${{ steps.find-pull-request.outputs.head-sha }}
            âœ… Deployment Preview URL: ${{ steps.netlify.outputs.deploy-url }}
